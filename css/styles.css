/* CSS variable declaration  :root (psuedo class) to target all the elements within the <HTML> */
:root {
  --primary-bg-color: #b0d0b0;
  --anchor-color: #000;
  --anchor-vi-color: #800040;
  --anchor-act-color: #265340;
  --button-bg-color: black;
  --button-text-color: white;
  --grid-color: #bdb6af;
  --contact-grid-color: #d0d0b0;
  --kf-sun-color-1: #edc655;
  --kf-sun-color-2: #fcffad;
  --kf-sun-color-3: #f76414;
  --font-weight-700: 700;
  --padding-10px: 10px;
  --padding-20px: 20px;
  --max-width-700px: 700px;
  --margin-center: 0 auto;
  --grid-gap-20px: 20px;
}

body {
  /* Var() function to use the CSS variable declared under the pseudo class :root */
  background-color: var(--primary-bg-color);
  font-family: 'Kalam', cursive;
  font-weight: 400;
  font-size: 20px;
  line-height: 1;
}

h1 {
  font-size: 40px;
  font-weight: var(--font-weight-700);
}

h2 {
  font-size: 32px;
  font-weight: var(--font-weight-700);
  margin-bottom: 10px;
  color: ivory;
}

h3 {
  font-size: 20px;
  font-weight: var(--font-weight-700);
}

h4 {
  font-size: 18px;
  /* font-weight: var(--font-weight-700); */
  color: #414141;
  margin: 0em;
}

p {
  /* letter-spacing: .08em;  */
  line-height: 1.5em;
  margin: 0 0 20px 0;
}

a {
  color: var(--anchor-color);
}

span {
  font-size: xx-large;
}

.navigation-list {
  /* removes the dots (bullet) for the lists */
  list-style-type: none;

  /* takes the font from the outer container */
  font-family: inherit;
  background-color: inherit;
  transition-duration: 0.5s;
  transition-property: opacity;

  /* by default it is 'ease' if this property not specified */
  transition-timing-function: ease-in;
}

.navigation-list li {
  display: inline-block;
  margin-left: 10px;
}

a:visited {
  color: var(--anchor-vi-color);
}

a:hover,
a:focus {
  /* No underlining when hovering over a link */
  text-decoration: none;
}

a:active {
  color: var(--anchor-act-color);
}

button,
.button,
.send-button {
  /* overwrites the browser defaults and resets the border */
  border: none;
  display: inline-block;

  /* takes the font from the outer container */
  font-family: inherit;

  /* styles the background color, font color, and text decoration (underline,etc.) of the button */
  background-color: var(--button-bg-color);
  color: var(--button-text-color) !important;
  text-decoration: none;

  /* add spacing to the button */
  padding: var(--padding-10px);
  border-radius: 3px;

  /* gives the button a botton border with a width of 2px, a type of solid, and a color in RGBA format */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition-duration: 0.5s;
  transition-property: opacity;

  /* by default it is 'ease' if this property not specified */
  transition-timing-function: linear;

  /* by default it is '0s' if this property not specified */

  /* transition-delay: 1s; */
}

button:hover,
button:focus,
.button:hover,
.button:focus,
.send-button:hover,
.send-button:focus {
  /* let the mouse appear as a hand when hovering over the button */
  cursor: pointer;

  /* reduces the opacity of the button to 80% */
  opacity: 0.90;
}

/* one more user defined class in BEM (Block Element Modifier) format */
.navigation-list__item--active {
  text-decoration: none;
}

.font__weight {
  font-weight: bold;
}

* {
  box-sizing: border-box;
}

.page-header {
  display: flex;
  width: 100%;
  padding: var(--padding-20px);
}

.page-header__item {
  flex: 0 1 125px;
  height: 100%;
  padding: var(--padding-10px);
}

.page-header__item:last-child {
  flex-grow: 1;
  text-align: right;
}

.portfolio__portrait {
  float: left; /* image will be placed on left side with regard to the child item */
  width: 400px;
  max-width: 100%;
  margin-right: 40px;
  border-radius: 50%; /* for rounded image */
}

.page-footer {
  clear: both; /* it clears all floats, both right & left */
  display: flex; /* to change the layout of the social-media icons */
  flex-direction: column; /* to position the elements in the flex container in column wise */
  text-align: center; /* this would align the images as well */
}

.profile {
  max-width: var(--max-width-700px);
  margin: var(--margin-center); /* to center  the profile container */
}

.about__body {
  max-width: var(--max-width-700px);
  margin: var(--margin-center); /* to center  the profile container */
  text-align: center;
}

.berlin-illustration {
  max-width: 100%;
}

.skillset {
  list-style-type: none; /* to remove the bullets from the list */
}

/* .contact__body { */
.contact__grid {
  display: grid;
  padding: var(--padding-20px);
  grid-template-columns: 1fr 2fr;
  /* max-width: var(--max-width-700px); */
  max-width: 1000px;
  /* grid-gap: var(--grid-gap-20px); */
  grid-gap: 50px;
  margin: var(--margin-center); /* to center  the profile container */
}

.section__grid {
  padding: var(--padding-20px);
}

.grid {
  display: grid;

  /* fr - fraction - new unit for grid - using this would make the columns arrange themselves without hiding any content when we resize the broswer */
  /* max-width: 1200px; */
  grid-template-columns: 1fr 1fr;
  grid-gap: var(--grid-gap-20px);  
  /* margin: 0 auto; */

  /* grid-template-columns: 300px 300px 300px; */

  /* grid-template-rows: 300px 300px; */
}

.contact__grid-item {
  line-height: 1.5;
}

.grid__item {
  /* background-color: var(--grid-color); */
  background: rgb(189,182,175);
  background: linear-gradient(rgba(1,12,61,1) 3%, rgba(189,182,175,1) 50%);
  /* padding: var(--padding-20px); */
  padding: 40px;
}

.grid__item a {
  margin-right: 20px;
}

.grid__item:nth-child(8) {
  background:rgba(189,182,175,1);
  /* background: linear-gradient(rgba(1,12,61,1) 3%, rgba(189,182,175,1) 50%); */
  color: black;
}

.grid__item:nth-child(8) h2 {
  color: #010c3d;
  font-size: larger;
}

.grid__item:nth-child(8) a{
  padding: 0 25px 0;
  background-color: #010c3d;
  font-size: x-large;
  color: ivory;
  text-decoration: none;
}

.grid__item:nth-child(8) a:hover {
  color: #010c3d;
  background-color: rgba(189,182,175,1);
  border: 2px #010c3d solid;
}

.grid__image {
  width: 500px;
  /* height: 300px; */
  max-width: 100%;
  margin-bottom: 20px;  
  /* justify-content: center; */
}

.mine {
  color: #414141;
}

#skill {
  color: black;
  border-bottom: 2px #010c3d solid;
}

.contact__grid-form {
  background-color: rgba(1,12,61,1);
  color: ivory;
  padding: 0 40px 20px;
  display: block;
}

.input-wrapper {
  padding: 10px;
}

.keyin-box {
  background-color: var(--primary-bg-color);
  border-bottom: 1px solid rgba(1,12,61,1);
}

.send-button {
  color: #010c3d !important;
  background-color: coral;  
}

.send-button:hover,
.send-button:focus { 
  color: #010c3d !important;
}

.error-message {
  color: grey;
  font-weight: bold;
  font-style: italic;
  font-size: 16px;
}

@media all and (max-width: 500px) {
  .portfolio__portrait {
    /* float: left; /* image will be placed on left side with regard to the child item */
    width: 400px;
    max-width: 100%;
    margin-right: 40px;
    border-radius: 50%; /* for rounded image */
  }

  .grid,
  .contact__grid {
    grid-template-columns: 1fr;
  }
}

@media all and (min-width: 500px) {
  .grid__item:nth-child(6) {
    grid-area: 3/2/5/3;
  }
  .grid__item:nth-child(8) {
    grid-area: 5/1/6/3;
  }
}

@media all and (min-width: 500px) and (max-width: 750px) {
  .grid,
  .contact__grid {
    grid-template-columns: 1fr 1fr;
  }
  .grid__item:nth-child(6) {
    grid-area: 3/2/5/3;
  }
  .grid__item:nth-child(8) {
    grid-area: 5/1/6/3;
  }
}

@media all and (max-width: 750px) {
  .grid,
  .contact__grid {
    grid-gap: var(--grid-gap-20px);  
  }

  .grid__item,
  .contact__grid-item,
  .contact__grid-form {
    grid-column: auto/auto;
    grid-row: auto/auto;
  }

  h1 {
    font-size: 24px;
  }
}

@keyframes logo-trans {
  from {
    transform: scale(0.8, 0.8);
  }

  to {
    transform: scale(1, 1);
  }
}

.page-header__item--trans {
  animation: 0.7s logo-trans infinite alternate linear;
}

@keyframes color-change {
  0% {
    fill: var(--kf-sun-color-1);
  }

  50% {
    fill: var(--kf-sun-color-2);
  }

  100% {
    fill: var(--kf-sun-color-3);
  }
}

/* .sun {
animation-duration: 4s;
animation-name: color-change;
animation-iteration-count: infinite;
animation-direction: alternate;
animation-timing-function: linear;
} */
.sun {
  animation: 4s color-change infinite alternate linear;
}

@keyframes cloud-move {
  /* to move the bigger cloud from left to right */
  from {
    transform: translate(0, 50px);
  }

  to {
    transform: translate(200px, 50px);
  }
}

.cloud-front {
  animation: 30s cloud-move infinite alternate linear;
}

@keyframes cloud-move-reverse {
  /* to move the smaller cloud from left to right */
  from {
    transform: translate(446px, 48px);
  }

  to {
    transform: translate(100px, 48px);
  }
}

.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}
